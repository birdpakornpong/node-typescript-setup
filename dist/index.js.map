{"version":3,"file":"index.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sEAAmC;AACnC,gHAA0E;AAI1E,IAAa,cAAc,GAA3B,MAAa,cAAc;IAEvB,YAA4C,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAGlE,QAAQ;QACX,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;IACtC,CAAC;CACJ;AAHG;IADC,qCAAO,EAAC,GAAG,CAAC;;;;8CAGZ;AAPQ,cAAc;IAD1B,wCAAU,EAAC,GAAG,CAAC;IAGE,iCAAM,EAAC,aAAa,CAAC;;GAF1B,cAAc,CAQ1B;AARY,wCAAc;;;;;;;;;;;;;ACL3B,mGAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA/B,sEAAuC;AAMvC,IAAa,IAAI,GAAjB,MAAa,IAAI;IAEP,QAAQ;;YACV,IAAI,KAAK,GAAG;gBACR,EAAE,IAAI,EAAG,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAC;gBACnC,EAAE,IAAI,EAAG,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAC;aACtC;YAED,OAAO,KAAK;QAChB,CAAC;KAAA;CACJ;AAVY,IAAI;IADhB,0BAAU,GAAE;GACA,IAAI,CAUhB;AAVY,oBAAI;;;;;;;;;;;;;;;;ACNjB,gEAAyB,CAAC,WAAW;AAErC,kHAA2C;AAC3C,8EAA0B;AAC1B,+HAA8C;AAC9C,gHAAiE;AAGjE,MAAM,MAAM,GAAG,IAAI,gDAAsB,CAAC,0BAAS,CAAC,CAAC;AACrD,MAAM,IAAI,GAAG,IAAI,CAAC;AAClB,MAAM,eAAe,GAAG,gBAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AAEpD,MAAM;KACH,SAAS,CAAC,CAAC,GAAwB,EAAQ,EAAE;IAC5C,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,4BAAS,CAAC,KAAK,EAAE,4BAAS,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC,CAAC;AACtE,CAAC,CAAC;KACD,cAAc,CAAC,CAAC,GAAwB,EAAQ,EAAE;AAEnD,CAAC,CAAC;KACD,KAAK,EAAE;KACP,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACjB,OAAO,CAAC,GAAG,CAAC,0CAA0C,IAAI,OAAO,CAAC,CAAC;AACvE,CAAC,CAAC,CAAC;;;;;;;;;;;;;ACtBH,sEAA4D;AAE5D,yJAAuE;AACvE,gFAA2B;AAG3B,IAAI,SAAS,GAAG,IAAI,qBAAS,EAAE,CAAC;AAEhC,SAAS,CAAC,IAAI,CAAc,aAAa,CAAC,CAAC,EAAE,CAAC,kBAAI,CAAC;AAEnD,qBAAe,SAAS;;;;;;;;;;;ACVxB;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://node-typescript-setup/./src/api/controllers/home/home-controller.ts","webpack://node-typescript-setup/./src/api/controllers/index.ts","webpack://node-typescript-setup/./src/api/services/homeService/manage/home-manage.ts","webpack://node-typescript-setup/./src/app.ts","webpack://node-typescript-setup/./src/ioc/invensify.config.ts","webpack://node-typescript-setup/external commonjs \"inversify\"","webpack://node-typescript-setup/external commonjs \"inversify-express-utils\"","webpack://node-typescript-setup/external commonjs \"reflect-metadata\"","webpack://node-typescript-setup/external commonjs \"swagger-ui-express\"","webpack://node-typescript-setup/external commonjs \"yamljs\"","webpack://node-typescript-setup/webpack/bootstrap","webpack://node-typescript-setup/webpack/before-startup","webpack://node-typescript-setup/webpack/startup","webpack://node-typescript-setup/webpack/after-startup"],"sourcesContent":["import { inject } from \"inversify\";\nimport { interfaces, controller, httpGet } from \"inversify-express-utils\";\nimport { HomeService } from \"src/api/services/homeService/home-service\";\n\n@controller(\"/\")\nexport class HomeController implements interfaces.Controller {\n\n    constructor( @inject(\"HomeService\") private homeService: HomeService ) {}\n\n    @httpGet(\"/\")\n    public getHello() {\n        return this.homeService.getHello()\n    }\n}","import \"./home/home-controller\"","import { injectable } from \"inversify\";\nimport { Arrays, Nullable } from \"src/api/interfaces/interfaces\";\nimport { HomeService } from \"../home-service\";\n\n\n@injectable()\nexport class Home implements HomeService {\n\n    async getHello(): Promise<Nullable<Arrays>> {\n        let users = [\n            { name : \"bird\", lastname: \"hirun\"},\n            { name : \"pang\", lastname: \"hirsn\"},\n        ]\n\n        return users\n    }\n}","import \"reflect-metadata\" // สำคัญมาก\nimport express from \"express\";\nimport swaggerUi from \"swagger-ui-express\";\nimport YAML from \"yamljs\";\nimport container from './ioc/invensify.config'\nimport { InversifyExpressServer } from \"inversify-express-utils\";\n\n\nconst server = new InversifyExpressServer(container);\nconst port = 3000;\nconst swaggerDocument = YAML.load(\"./swagger.yaml\");\n\nserver\n  .setConfig((app: express.Application): void => {\n    app.use(\"/docs\", swaggerUi.serve, swaggerUi.setup(swaggerDocument));\n  })\n  .setErrorConfig((app: express.Application): void => {\n      \n  })\n  .build()\n  .listen(port, () => {\n    console.log(`The service has been up and running on ${port} port`);\n});\n\n","import { Container, decorate, injectable } from \"inversify\";\nimport { HomeService } from \"src/api/services/homeService/home-service\";\nimport { Home } from \"src/api/services/homeService/manage/home-manage\";\nimport \"../api/controllers\"\n\n\nlet container = new Container();\n\ncontainer.bind<HomeService>('HomeService').to(Home)\n\nexport default container","module.exports = require(\"inversify\");","module.exports = require(\"inversify-express-utils\");","module.exports = require(\"reflect-metadata\");","module.exports = require(\"swagger-ui-express\");","module.exports = require(\"yamljs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/app.ts\");\n",""],"names":[],"sourceRoot":""}